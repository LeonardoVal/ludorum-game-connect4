{"version":3,"sources":["../src/__prologue__.js","../src/ConnectFour.js","../src/__epilogue__.js"],"names":["__init__","base","Sermat","ludorum","declare","raiseIf","raise","exports","Iterable","iterable","Game","players","UserInterface","__package__","__name__","__dependencies__","__SERMAT__","include","ConnectFour","games","ConnectionGame","name","height","width","lineLength","moves","result","this","ms","board","col","row","isEmptySquare","push","length","activePlayer","next","haps","update","column","v","activatePlayers","opponent","__place__","__moves__","__result__","constructor","place","Error","JSON","stringify","lines","asStrings","__lines__","join","i","indexOf","toString","repeat","victory","tied","static __SERMAT__","identifier","serializer","obj"],"mappings":";;4TAEA,SAASA,EAASC,EAAMC,EAAQC,GAAW,aAE1C,IAAIC,EAAUH,EAAKG,QAIlBC,GADQJ,EAAKK,MACHL,EAAKI,SAOZE,GANQN,EAAKO,SACLP,EAAKQ,SACTN,EAAQO,KACCP,EAAQQ,QAAQC,eAIhCC,YAAa,wBACbC,SAAU,wBACVd,SAAUA,EACVe,kBAAmBd,EAAMC,EAAQC,GACjCa,YAAcC,SAAUhB,EAAME,MCf5Be,EAAcX,EAAQW,YAAcd,EAAQD,EAAQgB,MAAMC,gBAC7DC,KAAM,cAINC,OAAQ,EAIRC,MAAO,EAIPC,WAAY,EAIZb,SAAS,SAAW,OAKpBc,MAAO,WACN,IAAIC,EAAS,KACb,IAAKC,KAAKD,SAAU,CAGnB,IAFA,IAAIE,KACHC,EAAQF,KAAKE,MACLC,EAAM,EAAGA,EAAMD,EAAMN,MAAOO,IACpC,IAAK,IAAIC,EAAM,EAAGA,EAAMF,EAAMP,OAAQS,IACrC,GAAIF,EAAMG,eAAeD,EAAKD,IAAO,CACpCF,EAAGK,KAAKH,GACR,MAICF,EAAGM,OAAS,KACfR,MACOC,KAAKQ,gBAAkBP,GAGhC,OAAOF,GAMRU,KAAM,SAAcX,EAAOY,EAAMC,GAChCjC,EAAQgC,EAAM,gCAAiCA,EAAM,MAMrD,IALA,IAAIF,EAAeR,KAAKQ,eACvBN,EAAQF,KAAKE,MACbU,GAAUd,EAAMU,GAChBb,EAASO,EAAMP,OAEPS,GADAF,EAAMN,MACA,GAAGQ,EAAMT,IAAUS,EACjC,GAAIF,EAAMG,eAAeD,EAAKQ,IAAU,CACvC,IAAIC,EAAIL,IAAiBR,KAAKhB,QAAQ,GAAK,IAAM,IACjD,OAAI2B,GACHX,KAAKc,gBAAgBd,KAAKe,YAC1Bf,KAAKE,MAAMc,WAAWZ,EAAKQ,GAASC,UAC7Bb,KAAKiB,iBACLjB,KAAKkB,WACLlB,MAEA,IAAIA,KAAKmB,YAAYnB,KAAKe,WAChCf,KAAKE,MAAMkB,OAAOhB,EAAKQ,GAASC,IAIpC,MAAM,IAAIQ,MAAK,gBAAkBC,KAAKC,UAAUzB,GAAO,MAGxDC,OAAQ,WAGP,IAFA,IAAIF,EAAaG,KAAKH,WACrB2B,EAAQxB,KAAKE,MAAMuB,UAAUzB,KAAK0B,UAAU1B,KAAKL,OAAQK,KAAKJ,MAAOC,IAAa8B,KAAI,KAC9EC,EAAI,EAAGA,EAAI5B,KAAKhB,QAAQuB,SAAUqB,EAC1C,GAAIJ,EAAMK,QAAQD,EAAEE,SAAS,IAAIC,OAAOlC,KAAgB,EACvD,OAAOG,KAAKgC,SAAShC,KAAKhB,QAAQ4C,KAGpC,OAAIJ,EAAMK,QAAO,KAAQ,EACjB7B,KAAKiC,OAEN,MAORC,qBACCC,WAAY,cACZC,WAAY,SAA+BC,GAC1C,OAAO7D,EAAQgB,MAAMC,eAAeJ,WAAW+C,WAAWC,OChG5D,ODuGD7D,EAAQgB,MAAMD,YAAcA,EAI5BA,EAAYF,WAAW8C,WAAavD,EAAQM,YAAY,IAAMK,EAAYF,WAAW8C,WACrFvD,EAAQS,WAAWC,QAAQgB,KAAKf,GAChChB,EAAOe,QAAQV,GC7GPA","file":"ludorum-game-connect4.min.js","sourcesContent":["/** Package wrapper and layout.\n*/\nfunction __init__(base, Sermat, ludorum) { \"use strict\";\n// Import synonyms. ////////////////////////////////////////////////////////////////////////////////\n\tvar declare = base.declare,\n\t\t//obj = base.obj,\n\t\t//copy = base.copy,\n\t\traise = base.raise,\n\t\traiseIf = base.raiseIf,\n\t\tIterable = base.Iterable,\n\t\titerable = base.iterable,\n\t\tGame = ludorum.Game,\n\t\tUserInterface = ludorum.players.UserInterface;\n\n// Library layout. /////////////////////////////////////////////////////////////////////////////////\n\tvar exports = {\n\t\t__package__: 'ludorum-game-connect4',\n\t\t__name__: 'ludorum_game_connect4',\n\t\t__init__: __init__,\n\t\t__dependencies__: [base, Sermat, ludorum],\n\t\t__SERMAT__: { include: [base, ludorum] }\n\t};\n","/** # ConnectFour.\n\nImplementation of the [Connect Four game](http://en.wikipedia.org/wiki/Connect_Four), based on\nLudorum's `ConnectionGame`.\n*/\nvar ConnectFour = exports.ConnectFour = declare(ludorum.games.ConnectionGame, {\n\tname: 'ConnectFour',\n\n\t/** The default `height` of the board is 6 ...\n\t*/\n\theight: 6,\n\n\t/** ... and the default `width` of the board is 7.\n\t*/\n\twidth: 7,\n\n\t/** The default `lineLength` to win the game is 4.\n\t*/\n\tlineLength: 4,\n\n\t/** The game's players are Yellow and Red, since these are the classic colours of the pieces.\n\t*/\n\tplayers: ['Yellow', 'Red'],\n\n\t/** The active players `moves()` are the indexes of every column that has not reached the top\n\theight.\n\t*/\n\tmoves: function moves() {\n\t\tvar result = null;\n\t\tif (!this.result()) {\n\t\t\tvar ms = [],\n\t\t\t\tboard = this.board;\n\t\t\tfor (var col = 0; col < board.width; col++) {\n\t\t\t\tfor (var row = 0; row < board.height; row++) {\n\t\t\t\t\tif (board.isEmptySquare([row, col])) {\n\t\t\t\t\t\tms.push(col);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ms.length > 0) {\n\t\t\t\tresult = {};\n\t\t\t\tresult[this.activePlayer()] = ms;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\n\t/** The `next(moves)` game state drops a piece at the column with the index of the active\n\tplayer's move.\n\t*/\n\tnext: function next(moves, haps, update) {\n\t\traiseIf(haps, 'Haps are not required (given ', haps, ')!');\n\t\tvar activePlayer = this.activePlayer(),\n\t\t\tboard = this.board,\n\t\t\tcolumn = +moves[activePlayer],\n\t\t\theight = board.height,\n\t\t\twidth = board.width;\n\t\tfor (var row = 0; row < height; ++row) {\n\t\t\tif (board.isEmptySquare([row, column])) {\n\t\t\t\tvar v = activePlayer === this.players[0] ? '0' : '1';\n\t\t\t\tif (update) {\n\t\t\t\t\tthis.activatePlayers(this.opponent());\n\t\t\t\t\tthis.board.__place__([row, column], v);\n\t\t\t\t\tdelete this.__moves__; // Invalidate cached values.\n\t\t\t\t\tdelete this.__result__;\n\t\t\t\t\treturn this;\n\t\t\t\t} else {\n\t\t\t\t\treturn new this.constructor(this.opponent(),\n\t\t\t\t\t\tthis.board.place([row, column], v));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthrow new Error('Invalid move '+ JSON.stringify(moves) +'!');\n\t},\n\n\tresult: function result() { //FIXME Workaround for bugs in Ludorum v0.2.0.\n\t\tvar lineLength = this.lineLength,\n\t\t\tlines = this.board.asStrings(this.__lines__(this.height, this.width, lineLength)).join(' ');\n\t\tfor (var i = 0; i < this.players.length; ++i) {\n\t\t\tif (lines.indexOf(i.toString(36).repeat(lineLength)) >= 0) {\n\t\t\t\treturn this.victory([this.players[i]]);\n\t\t\t}\n\t\t}\n\t\tif (lines.indexOf('.') < 0) { // No empty squares means a tie.\n\t\t\treturn this.tied();\n\t\t}\n\t\treturn null; // The game continues.\n\t},\n\n\t// ## Utility methods ##########################################################################\n\n\t/** Serialization is delegated to the serializer of the parent class.\n\t*/\n\t'static __SERMAT__': {\n\t\tidentifier: 'ConnectFour',\n\t\tserializer: function serialize_ConnectFour(obj) {\n\t\t\treturn ludorum.games.ConnectionGame.__SERMAT__.serializer(obj);\n\t\t}\n\t},\n}); // declare ConnectFour.\n\n/** Adding Mancala to `ludorum.games`.\n*/\nludorum.games.ConnectFour = ConnectFour;\n\n/** Sermat serialization.\n*/\nConnectFour.__SERMAT__.identifier = exports.__package__ +'.'+ ConnectFour.__SERMAT__.identifier;\nexports.__SERMAT__.include.push(ConnectFour);\nSermat.include(exports);\n","// See __prologue__.js\n\treturn exports;\n}\n"]}